{"version":3,"sources":["components/points2019.ts","components/points2016.ts","components/points2017.ts","components/points2018.ts","components/points2020.ts","components/points2021.ts","components/points-line-chart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["points2019","points2016","points2017","points2018","points2020","points2021","defaultState","showTrendLines","showAllDataPoints","showYears","2016","2017","2018","2019","2020","2021","PointsLineChart","props","handleShowTrendLines","setState","prevState","nextState","console","warn","JSON","stringify","handleShowAllDataPoints","handleShowYear","year","state","redRgba","redLineColour","redLegendFillColour","purpleRgba","purpleLineColour","purpleLegendFillColour","slateBlueRgba","slateBlueLineColour","slateBlueLegendFillColour","greyLineColour","aliceBlueRgba","aliceBlueLineColour","aliceBlueLegendFillColour","greenRgba","greenLineColour","greenLegendFillColour","orangeRgba","orangeLineColour","orangeLegendFillColour","defaultChartDataSet","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","borderWidth","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","pointsRunningTotalsPerYear","pointsPerYear","Object","prototype","hasOwnProperty","call","yearElement","index","length","nextElement","push","dataPointCount","this","Math","max","labels","element","toString","chartData","datasets","label","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","data","slice","playoffFormValues","relegationFormValues","style","position","height","className","margin","type","id","onChange","htmlFor","checked","keys","map","i","isNaN","display","marginLeft","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","xAxes","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAaA,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GC/CWC,EAAuB,CACpC,EAEA,EAAE,EAAE,EAAE,EAAE,EACR,EAAE,EAAE,EAAE,EAAE,EACR,EAAE,EAAE,EAAE,EAAE,EACR,EAAE,EAAE,EACJ,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACZ,GCZaC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GChDWC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GC/CWC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EAGA,EAGA,EACA,EACA,EACA,EACA,EACA,E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","file":"static/js/main.12f470dd.chunk.js","sourcesContent":["export const points2019: number[] = [\r\n  0, // Dummy 0th result\r\n  0, // 0-2 Leeds (H)\r\n  1, // 1-1 Birmingham (A)\r\n  3, // 2-0 QPR (H)\r\n  3, // 1-2 Derby (A)\r\n  3, // 1-2 Hull (A)\r\n  1, // 2-2 Middlesbrough (H)\r\n  3, // 1-2 Stoke (A)\r\n  1, // 0-0 Swansea (H)\r\n  1, // 3-3 Preston (A)\r\n  1, // 1-1 Brentford (A)\r\n  3, // 1-0 Reading (H)\r\n  0, // 0-3 Luton (A)\r\n  3, // 2-1 Charlton (H)\r\n  1, // 2-2 Wigan (H)\r\n  1, // 2-2 Barnsley (A)\r\n  3, // 0-1 Cardiff (A)\r\n  1, // 0-0 Nottingham Forest (H)\r\n  0, // 4-1 West Bromich Albion (A)\r\n  3, // 5-2 Huddersfield (H)\r\n  3, // 1-2 Fulham (A)\r\n  0, // 1-2 Milwall (H)\r\n  0, // 0-2 Blackburn (H)\r\n  0, // 1-0 Sheffield Wednesday (A)\r\n  0, // 3-2 Charlton (A)\r\n  3, // 3-0 Luton (H)\r\n  0, // 0-4 Brentford (H)\r\n  3, // 0-2 Wigan (A)\r\n  3, // 1-0 Barnsley (H)\r\n  3, // 0-1 Reading (A)\r\n  3, // 0-1 QPR (A)\r\n  0, // 1-3 Birmingham (H)\r\n  3, // 3-2 Derby (H)\r\n  0, // 1-0 Leeds (A)\r\n  0, // 0-3 West Bromich Albion (H)\r\n  0, // 2-1 Huddersfield (A)\r\n  1, // 1-1 Millwall (A)\r\n  1, // 1-1 Fulham (H)\r\n  0, // 1-3 Blackburn (A)\r\n  0, // 1-2 Sheffield Wednesday (H)\r\n  0, // 0-1 Nottingham Forest (A)\r\n  0, // 0-1 Cardiff (H)\r\n  3, // 2-1 Hull (H)\r\n  3, // 1-3 Middlesbrough (A)\r\n  1, // 1-1 Stoke (H)\r\n  0, // 1-0 Swansea (A)\r\n  1, // 1-1 Preston (H)\r\n];\r\n","export const points2016: number[] = [\r\n0, // Dummy 0th result\r\n\r\n3,3,0,0,3,        // Aug\r\n1,0,1,3,3,        // Sep\r\n3,0,0,3,1,        // Oct\r\n0,0,0,            // Nov\r\n3,0,0,0,0,0,      // Dec\r\n0,0,0,1,          // Jan\r\n3,1,0,0,1,0,      // Feb \r\n1,1,3,3,          // Mar\r\n0,0,3,3,1,3,3,    // Apr \r\n0                 // May\r\n];\r\n","export const points2017: number[] = [\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  1,\r\n  1,\r\n  3,\r\n  1,\r\n  3,\r\n  1,\r\n  3, // 26 Sep\r\n  3,\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  3,\r\n  1,\r\n  0,\r\n  3,\r\n  3, // 3 Dec\r\n  3,\r\n  3,\r\n  1,\r\n  3,\r\n  0, // 30 Dec\r\n\r\n  0,\r\n  0,\r\n  1,\r\n  3,\r\n  0, // 2 Feb 2018\r\n  1,\r\n  1,\r\n  1,\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  3,\r\n  1,\r\n  0, // 2 Apr 2018\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  1,\r\n  0\r\n];\r\n","export const points2018: number[] = [\r\n  0,\r\n  1,\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  3,\r\n  3,\r\n  0,\r\n  0,\r\n  1, // 28 Sep\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  0,\r\n  0, // 03 Nov\r\n  0,\r\n  0,\r\n  3,\r\n  1,\r\n  3, // 08 Dec\r\n  1,\r\n  1,\r\n  1,\r\n  3, // 29 Dec\r\n  3,\r\n  3,\r\n  3,\r\n  3,\r\n  3, // 09 Feb\r\n  3,\r\n  0,\r\n  0,\r\n  1,\r\n  0,\r\n  1,\r\n  3, // 30 Mar\r\n  3,\r\n  1,\r\n  3,\r\n  0,\r\n  1,\r\n  0,\r\n  0,\r\n  3,\r\n  1\r\n];\r\n","export const points2020: number[] = [\r\n  0, // Dummy 0th result\r\n  3, // 2-1 Coventry City (H)\r\n  3, // 0-2 Stoke City (A)\r\n  3, // 2-0 Sheffield Wednesday (H)\r\n  3, // 1-2 Nottingham Forest (A)\r\n  1, // 2-2 Barnsley (A)\r\n  0, // 0-1 Middlesbrough (H)\r\n  1, // 1-1 Swansea (H)\r\n  0, // 0-1 Bournemouth (A)\r\n  0, // 1-3 Norwich (H)\r\n  3, // 1-2 Huddersfield (A)\r\n  3, // 0-1 Cardiff (A)\r\n  3, // 1-0 Derby (H)\r\n  1, // 0-0 Watford (H)\r\n  0, // 3-1 Reading (A)\r\n  3, // 1-2 QPR (A)\r\n  0, // 0-1 Birmingham (H)\r\n  3, // 1-0 Blackburn (H)\r\n  0, // 2-0 Rotherham (A)\r\n  0, // 0-2 Millwall (H)\r\n  0, // 1-0 Preston (A)\r\n  3, // 2-1 Wycombe (H)\r\n  0, // 2-1 Luton (A)\r\n  3, // 2-0 Preston (H)\r\n  \r\n  0, // 2-0 Norwich (A)\r\n  3, // 2-1 Huddersfield (H)\r\n  0, // 1-0 Derby (A)\r\n  0, // 3-2 Brenford (A)\r\n  0, // 0-2 Cardiff (H)\r\n  0, // 6-0 Watford (A)\r\n  0, // 0-2 Reading (H)\r\n\r\n     // Holden sacked before this match\r\n  0, // 0-1 Barnsley (H)\r\n\r\n     // Pearson appointed\r\n  3, // 1-3 Middlesbrough (A)\r\n  3, // 1-3 Swansea (A)\r\n  0, // 1-2 Bournemouth (H)\r\n  0, // 0-2 QPR (H)\r\n  3, // 0-3 Birmingham (A)\r\n  1, // 0-0 Blackburn (A)\r\n  0, // 0-2 Rotherham (H)\r\n  0, // 0-2 Stoke City (H)\r\n  0, // 3-1 Coventry City (A)\r\n  1, // 0-0 Nottingham Forest (H)\r\n  1, // 1-1 Sheffield Wednesday (A)\r\n  0, // 2-1 Wycombe (A)\r\n  0, // 2-3 Luton (H)\r\n  0, // 4-1 Millwall (A)\r\n  0, // 1-3 Brentford (H)\r\n];\r\n","export const points2021: number[] = [\r\n  0, // Dummy 0th result\r\n  1, // 1-1 Blackpool (H)\r\n  0, // 2-1 Middlesbrough (A)\r\n  // 0, // Dummy 0th result\r\n  // 1, // 1-1 Blackpool (H)\r\n  // 0, // 2-1 Middlesbrough (A)\r\n  // 0, // Dummy 0th result\r\n  // 1, // 1-1 Blackpool (H)\r\n  // 0, // 2-1 Middlesbrough (A)\r\n  // 0, // Dummy 0th result\r\n  // 1, // 1-1 Blackpool (H)\r\n  // 0, // 2-1 Middlesbrough (A)\r\n  // 0, // Dummy 0th result\r\n  // 1, // 1-1 Blackpool (H)\r\n  // 0, // 2-1 Middlesbrough (A)\r\n  // 0, // Dummy 0th result\r\n  // 1, // 1-1 Blackpool (H)\r\n  // 0, // 2-1 Middlesbrough (A)\r\n];\r\n","import * as React from \"react\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { points2019 } from \"./points2019\";\r\nimport { points2016 } from \"./points2016\";\r\nimport { points2017 } from \"./points2017\";\r\nimport { points2018 } from \"./points2018\";\r\nimport { points2020 } from \"./points2020\";\r\nimport { points2021 } from \"./points2021\";\r\n\r\ninterface PointsLineChartProps { }\r\n\r\ntype ShowYears = {\r\n  [year: number]: boolean;\r\n}\r\n\r\ntype PointsPerYear = {\r\n  [year: number]: number[];\r\n}\r\n\r\ninterface PointsLineChartState {\r\n  showTrendLines: boolean;\r\n\r\n  showAllDataPoints: boolean;\r\n\r\n  showYears: ShowYears;\r\n}\r\n\r\nconst defaultState: PointsLineChartState = {\r\n  showTrendLines: false,\r\n  showAllDataPoints: true,\r\n\r\n  showYears: {\r\n    2016: false,\r\n    2017: false,\r\n    2018: false,\r\n    2019: false,\r\n    2020: true,\r\n    2021: true\r\n  }\r\n}\r\n\r\nclass PointsLineChart extends React.Component<\r\n  PointsLineChartProps,\r\n  PointsLineChartState\r\n> {\r\n\r\n  constructor(props = {}) {\r\n    super(props);\r\n    this.state = defaultState;\r\n  }\r\n\r\n  handleShowTrendLines = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showTrendLines = !prevState.showTrendLines;\r\n      nextState.showYears = { ...prevState.showYears };\r\n\r\n      console.warn(\"handleShowTrendLines\");\r\n      console.warn(JSON.stringify(nextState));\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShowAllDataPoints = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showAllDataPoints = !prevState.showAllDataPoints;\r\n      nextState.showYears = { ...prevState.showYears };\r\n\r\n      console.warn(\"showAllDataPoints\");\r\n      console.warn(JSON.stringify(nextState));\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShowYear = (year: number) => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showYears = { ...prevState.showYears };\r\n      nextState.showYears[year] = !prevState.showYears[year];\r\n\r\n      console.warn(\"handleShowYear : \" + year);\r\n      console.warn(JSON.stringify(nextState));\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const redRgba = \"255, 0, 0\";\r\n    const redLineColour = `rgba(${redRgba}, 1)`;\r\n    const redLegendFillColour = `rgba(${redRgba}, 0.4)`;\r\n\r\n    // 128, 0, 128\r\n    const purpleRgba = \"85, 85, 85\";\r\n    const purpleLineColour = `rgba(${purpleRgba}, 1)`;\r\n    const purpleLegendFillColour = `rgba(${purpleRgba}, 0.4)`;\r\n\r\n    const slateBlueRgba = \"0, 100, 0\";\r\n    const slateBlueLineColour = `rgba(${slateBlueRgba}, 1)`;\r\n    const slateBlueLegendFillColour = `rgba(${slateBlueRgba}, 0.4)`;\r\n\r\n    const greyRgba = \"220, 220, 220\";\r\n    const greyLineColour = `rgba(${greyRgba}, 1)`;\r\n    // const greyLegendFillColour = `rgba(${greyRgba}, 0.4)`;\r\n\r\n    // 2016 - Alice Blue\r\n    const aliceBlueRgba = \"0, 0, 255\";\r\n    const aliceBlueLineColour = `rgba(${aliceBlueRgba}, 1)`;\r\n    const aliceBlueLegendFillColour = `rgba(${aliceBlueRgba}, 0.4)`;\r\n\r\n    const greenRgba = \"75, 192, 192\";\r\n    const greenLineColour = `rgba(${greenRgba}, 1)`;\r\n    const greenLegendFillColour = `rgba(${greenRgba}, 0.4)`;\r\n\r\n    const orangeRgba = \"255, 165, 0\";\r\n    const orangeLineColour = `rgba(${orangeRgba}, 1)`;\r\n    const orangeLegendFillColour = `rgba(${orangeRgba}, 0.4)`;\r\n\r\n    const defaultChartDataSet: Chart.ChartDataSets = {\r\n      // label: \"2016-\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n\r\n      // backgroundColor: aliceBlueLegendFillColour,\r\n      // borderColor: aliceBlueLineColour,\r\n\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [3, 3],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n\r\n      borderWidth: 3,\r\n\r\n      // pointBorderColor: aliceBlueLineColour,\r\n\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n\r\n      // pointHoverBackgroundColor: aliceBlueLineColour,\r\n\r\n      pointHoverBorderColor: greyLineColour,\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      // data: pointsRunningTotalsPerYear[2016]\r\n    }\r\n\r\n    const pointsRunningTotalsPerYear: PointsPerYear = {\r\n      2016: [],\r\n      2017: [],\r\n      2018: [],\r\n      2019: [],\r\n      2020: [],\r\n      2021: [],\r\n    }\r\n\r\n    const pointsPerYear: PointsPerYear = {\r\n      2016: points2016,\r\n      2017: points2017,\r\n      2018: points2018,\r\n      2019: points2019,\r\n      2020: points2020,\r\n      2021: points2021,\r\n    }\r\n\r\n    for (const year in pointsRunningTotalsPerYear) {\r\n      if (Object.prototype.hasOwnProperty.call(pointsRunningTotalsPerYear, year)) {\r\n        const yearElement = pointsRunningTotalsPerYear[year];\r\n\r\n        for (let index = 0; index < pointsPerYear[year].length; index++) {\r\n          const runningTotal = index === 0 ? 0 : yearElement[index - 1];\r\n\r\n          const nextElement = runningTotal + pointsPerYear[year][index];\r\n\r\n          yearElement.push(nextElement);\r\n        }\r\n      }\r\n    }\r\n\r\n    // const dataPointCount = pointsPerYear[2016].length;\r\n    const dataPointCount =\r\n      this.state.showAllDataPoints ?\r\n        pointsPerYear[2016].length :\r\n        Math.max(pointsPerYear[2021].length + 10, 12);\r\n\r\n    const labels: string[] = [];\r\n\r\n    for (let index = 0; index < dataPointCount; index++) {\r\n      const gameNumber = index;\r\n\r\n      const element =\r\n        (gameNumber % 5 === 0 ||\r\n          gameNumber === 1 ||\r\n          gameNumber === 23 ||\r\n          gameNumber === 46) &&\r\n          gameNumber !== 45\r\n          ? gameNumber.toString(10)\r\n          : \"\";\r\n\r\n      labels.push(element);\r\n    }\r\n\r\n    const chartData: Chart.ChartData = {\r\n      labels: labels,\r\n\r\n      datasets: []\r\n    };\r\n\r\n    if (this.state.showYears[2016]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2016-\",\r\n          backgroundColor: aliceBlueLegendFillColour,\r\n          borderColor: aliceBlueLineColour,\r\n          pointBorderColor: aliceBlueLineColour,\r\n          pointHoverBackgroundColor: aliceBlueLineColour,\r\n          data: pointsRunningTotalsPerYear[2016].slice(0, dataPointCount),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2017]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2017-\",\r\n          backgroundColor: purpleLegendFillColour,\r\n          borderColor: purpleLineColour,\r\n          pointBorderColor: purpleLineColour,\r\n          pointHoverBackgroundColor: purpleLineColour,\r\n          data: pointsRunningTotalsPerYear[2017].slice(0, dataPointCount),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2018]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2018-\",\r\n          backgroundColor: slateBlueLegendFillColour,\r\n          borderColor: slateBlueLineColour,\r\n          pointBorderColor: slateBlueLineColour,\r\n          pointHoverBackgroundColor: slateBlueLineColour,\r\n          data: pointsRunningTotalsPerYear[2018].slice(0, dataPointCount),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2019]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2019-\",\r\n          backgroundColor: slateBlueLegendFillColour,\r\n          borderColor: slateBlueLineColour,\r\n          pointBorderColor: slateBlueLineColour,\r\n          pointHoverBackgroundColor: slateBlueLineColour,\r\n          borderDash: [],\r\n          data: pointsRunningTotalsPerYear[2019].slice(0, dataPointCount),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2020]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2020-\",\r\n          backgroundColor: purpleLegendFillColour,\r\n          borderColor: purpleLineColour,\r\n          pointBorderColor: purpleLineColour,\r\n          pointHoverBackgroundColor: purpleLineColour,\r\n          borderDash: [],\r\n          data: pointsRunningTotalsPerYear[2020].slice(0, dataPointCount),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2021]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2021-\",\r\n          backgroundColor: redLegendFillColour,\r\n          borderColor: redLineColour,\r\n          pointBorderColor: redLineColour,\r\n          pointHoverBackgroundColor: redLineColour,\r\n          borderDash: [],\r\n          data: pointsRunningTotalsPerYear[2021].slice(0, dataPointCount),\r\n\r\n          borderWidth: 4\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showTrendLines) {\r\n      const playoffFormValues: number[] = [];\r\n\r\n      for (let index = 0; index < dataPointCount; index++) {\r\n        // const element = (index + 1) * 1.7;\r\n        const element = index * 1.61;\r\n        playoffFormValues.push(element);\r\n      }\r\n\r\n      const relegationFormValues: number[] = [];\r\n\r\n      for (let index = 0; index < dataPointCount; index++) {\r\n        const element = index * 1.0;\r\n        relegationFormValues.push(element);\r\n      }\r\n\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"Playoffs\",\r\n          backgroundColor: greenLegendFillColour,\r\n          borderColor: greenLineColour,\r\n          pointBorderColor: greenLineColour,\r\n          pointHoverBackgroundColor: greenLineColour,\r\n          borderDash: [5, 15],\r\n          data: playoffFormValues,\r\n        });\r\n\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"Relegation\",\r\n          backgroundColor: orangeLegendFillColour,\r\n          borderColor: orangeLineColour,\r\n          pointBorderColor: orangeLineColour,\r\n          pointHoverBackgroundColor: orangeLineColour,\r\n          borderDash: [5, 15],\r\n          data: relegationFormValues,\r\n        });\r\n      }\r\n    }\r\n\r\n    const chartOptions = {\r\n      // responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: \"Points Total\"\r\n            }\r\n          }\r\n        ],\r\n        xAxes: [\r\n          {\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: \"Games Played\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ position: \"relative\", height: \"80vh\" }}>\r\n        <div\r\n          className=\"custom-control custom-checkbox\"\r\n          style={{ margin: \"10px 30px 5px 25px\" }}\r\n        >\r\n          <label className=\"custom-control-label\">Show: </label>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck1\"\r\n            onChange={() => this.handleShowTrendLines()}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n            Trend Lines\r\n          </label>\r\n\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck2\"\r\n            onChange={() => this.handleShowAllDataPoints()}\r\n            checked={this.state.showAllDataPoints}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customCheck2\">\r\n            All Points\r\n          </label>\r\n\r\n          {/* <pre>\r\n            {JSON.stringify(this.state, null, 2)}\r\n          </pre> */}\r\n\r\n          {/* {\r\n            Object.keys(this.state.showYears).map(i =>\r\n            (!isNaN(+i) &&\r\n              <div key={+i} style={{ display: \"inline\" }}>\r\n                <h3>{i} : {(this.state.showYears as any)[i]}</h3>\r\n              </div>\r\n            ))\r\n          } */}\r\n\r\n          {\r\n            Object.keys(pointsRunningTotalsPerYear).map(i =>\r\n            (!isNaN(+i) &&\r\n              <div key={+i} style={{ display: \"inline\" }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id={`show${i}Checkbox`}\r\n                  onChange={() => this.handleShowYear(+i)}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                  checked={(this.state.showYears as any)[i]} />\r\n                <label className=\"custom-control-label\" htmlFor={`show${i}Checkbox`}>\r\n                  {i}-\r\n                </label>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n\r\n        <Line\r\n          data={chartData}\r\n          options={chartOptions}\r\n        // width={600}\r\n        // redraw={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PointsLineChart;\r\n","import * as React from \"react\";\nimport \"./App.css\";\n\nimport PointsLineChart from \"./components/points-line-chart\";\n\nclass App extends React.Component {\n  public render() {\n    return <PointsLineChart />;\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}